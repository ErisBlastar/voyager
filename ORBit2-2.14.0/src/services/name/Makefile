# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/services/name/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.







srcdir = .
top_srcdir = ../../..

pkgdatadir = $(datadir)/ORBit2
pkgincludedir = $(includedir)/ORBit2
top_builddir = ../../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = ../../../
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-pc-os2-emx
host_triplet = i386-pc-os2-emx
noinst_PROGRAMS = name-client-2$(EXEEXT) orbit-name-server-2$(EXEEXT)
DIST_COMMON = README $(libORBitservicesinclude_HEADERS) \
	$(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/Makefile.shared
subdir = src/services/name
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libdir)" \
	"$(DESTDIR)$(idldir)" \
	"$(DESTDIR)$(libORBitservicesincludedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
libname_server_2_a_AR = $(AR) $(ARFLAGS)
libname_server_2_a_LIBADD =
am_libname_server_2_a_OBJECTS = orbit-name-server.$(OBJEXT) \
	CosNaming-skels.$(OBJEXT) name-support.$(OBJEXT)
libname_server_2_a_OBJECTS = $(am_libname_server_2_a_OBJECTS)
libLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(lib_LTLIBRARIES)
libORBitCosNaming_2_la_LIBADD =
am_libORBitCosNaming_2_la_OBJECTS = CosNaming-common.lo \
	CosNaming-stubs.lo
libORBitCosNaming_2_la_OBJECTS = $(am_libORBitCosNaming_2_la_OBJECTS)
PROGRAMS = $(noinst_PROGRAMS)
am_name_client_2_OBJECTS = name-client.$(OBJEXT) \
	name-support.$(OBJEXT)
name_client_2_OBJECTS = $(am_name_client_2_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(top_builddir)/src/orb/libORBit-2.la \
	libORBitCosNaming-2.la $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_orbit_name_server_2_OBJECTS = boot.$(OBJEXT)
orbit_name_server_2_OBJECTS = $(am_orbit_name_server_2_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libname_server_2_a_SOURCES) \
	$(libORBitCosNaming_2_la_SOURCES) $(name_client_2_SOURCES) \
	$(orbit_name_server_2_SOURCES)
DIST_SOURCES = $(libname_server_2_a_SOURCES) \
	$(libORBitCosNaming_2_la_SOURCES) $(name_client_2_SOURCES) \
	$(orbit_name_server_2_SOURCES)
idlDATA_INSTALL = $(INSTALL_DATA)
DATA = $(idl_DATA)
libORBitservicesincludeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(libORBitservicesinclude_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
pkglibdir = 
ACLOCAL = ${SHELL} L:/orbit2-2.14.0/missing --run aclocal-1.9 
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = tar.exe
AR = ar.exe
AS = as
AUTOCONF = ${SHELL} L:/orbit2-2.14.0/missing --run autoconf
AUTOHEADER = ${SHELL} L:/orbit2-2.14.0/missing --run autoheader
AUTOMAKE = ${SHELL} L:/orbit2-2.14.0/missing --run automake-1.9
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Werror-implicit-function-declaration -std=gnu89 -D__EMX__ -DOS2  -D__ST_MT_ERRNO__ -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = 
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -D__EMX__ -DOS2 -D__ST_MT_ERRNO__ -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISABLE_DEPRECATED_CFLAGS =  	-DG_DISABLE_DEPRECATED
DLLTOOL = dlltool
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
ENABLE_GTK_DOC_FALSE = 
ENABLE_GTK_DOC_TRUE = #
ENABLE_HTTP_FALSE = 
ENABLE_HTTP_TRUE = #
EXEEXT = .exe
F77 = 
FFLAGS = 
GLIB_REQUIRED = 2.6.0
GTK_DOC_USE_LIBTOOL_FALSE = #
GTK_DOC_USE_LIBTOOL_TRUE = 
HAVE_ORBIT_SSL_SUPPORT = 
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS =  -Zexe -Zmap -D__ST_MT_ERRNO__ -s
LIBIDL_REQUIRED = 0.8.2
LIBM = -lm
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LINC_CFLAGS = -D_REENTRANT -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
LINC_LIBS = -lgobject-2.0 -lgthread-2.0 -lglib-2.0 -lintl  
LINC_SSL_SUPPORT = 0
LN_S = cp -p
LOCAL_LINC_CFLAGS = -I$(top_srcdir)/linc2/include -I$(top_builddir)/linc2/include
LOCAL_LINC_LIBS = $(top_builddir)/linc2/src/liblinc.la
LTLIBOBJS = 
LT_VERSION = 1:0:1
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = makeinfo --no-split
MINGW_LDFLAGS = 
OBJDUMP = objdump
OBJEXT = o
ORBIT_ALIGNOF_CORBA_BOOLEAN = 1
ORBIT_ALIGNOF_CORBA_CHAR = 1
ORBIT_ALIGNOF_CORBA_DOUBLE = 4
ORBIT_ALIGNOF_CORBA_FLOAT = 4
ORBIT_ALIGNOF_CORBA_LONG = 4
ORBIT_ALIGNOF_CORBA_LONG_DOUBLE = 4
ORBIT_ALIGNOF_CORBA_LONG_LONG = 4
ORBIT_ALIGNOF_CORBA_OCTET = 1
ORBIT_ALIGNOF_CORBA_POINTER = 4
ORBIT_ALIGNOF_CORBA_SHORT = 2
ORBIT_ALIGNOF_CORBA_STRUCT = 1
ORBIT_ALIGNOF_CORBA_WCHAR = 2
ORBIT_CFLAGS = -D_REENTRANT -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
ORBIT_DEBUG_CFLAGS = 
ORBIT_IDL_CFLAGS = -I/usr/local/include/libIDL-2.0 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
ORBIT_IDL_LIBS = -L/usr/local/lib -lIDL-2 -lgobject-2.0 -lgmodule-2.0 -lglib-2.0 -lintl  
ORBIT_LIBS = -lgobject-2.0 -lgthread-2.0 -lgmodule-2.0 -lglib-2.0 -lintl  
ORBIT_MAJOR_VERSION = 2
ORBIT_MICRO_VERSION = 0
ORBIT_MINOR_VERSION = 14
ORBIT_NAME_CFLAGS = -D_REENTRANT -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
ORBIT_NAME_LIBS = -lgobject-2.0 -lgthread-2.0 -lgmodule-2.0 -lglib-2.0 -lintl  
ORBIT_SERIAL = 20
ORBIT_VERSION = 2.14.0
OS_WIN32_FALSE = 
OS_WIN32_TRUE = #
PACKAGE = ORBit2
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = ;
PKG_CONFIG = L:/usr/bin/pkg-config.exe
POPT_LIBS = -lpopt
RANLIB = echo
SET_MAKE = 
SHELL = sh
SSL_CFLAGS = 
SSL_LIBS = 
STRIP = strip
VERSION = 2.14.0
WARN_CFLAGS = -Wall -Wunused -Wmissing-prototypes -Wmissing-declarations
ac_ct_AR = ar.exe
ac_ct_AS = 
ac_ct_CC = gcc
ac_ct_CXX = 
ac_ct_DLLTOOL = 
ac_ct_F77 = 
ac_ct_OBJDUMP = 
ac_ct_RANLIB = echo
ac_ct_STRIP = strip
ac_pt_PKG_CONFIG = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i386-pc-os2-emx
build_alias = 
build_cpu = i386
build_os = os2-emx
build_vendor = pc
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = i386-pc-os2-emx
host_alias = 
host_cpu = i386
host_os = os2-emx
host_vendor = pc
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = L:/orbit2-2.14.0/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
libm = -lm
#libm = 
libORBitservicesincludedir = $(includedir)/orbit-2.0/ORBitservices
lib_LTLIBRARIES = libORBitCosNaming-2.la
lib_LIBRARIES = libname-server-2.a
libORBitCosNaming_2_la_SOURCES = \
	CosNaming-common.c 						\
	CosNaming-stubs.c

libORBitservicesinclude_HEADERS = \
	CosNaming.h							\
	CosNaming_impl.h

libORBitCosNaming_2_la_LDFLAGS = \
	-version-info $(LT_VERSION)					\
	-no-undefined							\
	$(ORBIT_NAME_LIBS)						\
	$(top_builddir)/src/orb/libORBit-2.la

INCLUDES = \
	-I.				\
	-I$(top_builddir)/include	\
	-I$(top_srcdir)/include		\
	-DORBIT2_INTERNAL_API		\
	$(WARN_CFLAGS)			\
	$(DISABLE_DEPRECATED_CFLAGS)	\
	$(LOCAL_LINC_CFLAGS)		\
	$(ORBIT_NAME_CFLAGS)

CosNaming_built = \
	CosNaming.h 							\
	CosNaming-common.c 						\
	CosNaming-stubs.c 						\
	CosNaming-skels.c

IDL_FLAGS = --showcpperrors
IDL_FILES = CosNaming.idl
IDL_COMPILER = $(top_builddir)/src/idl-compiler/orbit-idl-2$(EXEEXT)
#IDL_DEPS_MAGIC := $(shell mkdir .deps > /dev/null 2>&1 || :)
#IDL_DEP_FILES = $(IDL_FILES:%.idl=.deps/%.idl.P)
CLEANFILES = my_cosnaming_built $(BUILT_SOURCES)
DEPS = $(top_builddir)/src/orb/libORBit-2.la			\
	libORBitCosNaming-2.la

LDADDS = \
	$(top_builddir)/src/orb/libORBit-2.la			\
	libORBitCosNaming-2.la					\
	$(libm)							\
	$(ORBIT_NAME_LIBS)

name_client_2_SOURCES = name-client.c name-support.c name-support.h
name_client_2_LDFLAGS = $(FLAGS)
name_client_2_DEPENDENCIES = $(DEPS) CosNaming.h
name_client_2_LDADD = $(LDADDS)
libname_server_2_a_SOURCES = orbit-name-server.c CosNaming-skels.c \
			   name-support.c name-support.h

libname_server_2_a_DEPENDENCIES = $(DEPS) CosNaming.h
orbit_name_server_2_SOURCES = boot.c
orbit_name_server_2_LDFLAGS = $(FLAGS)
orbit_name_server_2_DEPENDENCIES = $(DEPS) CosNaming.h
orbit_name_server_2_LDADD = libname-server-2.a $(LDADDS)
EXTRA_DIST = $(idl_DATA)
idldir = $(datadir)/idl/orbit-2.0
idl_DATA = CosNaming.idl
BUILT_SOURCES = $(CosNaming_built)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am $(top_srcdir)/Makefile.shared $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/services/name/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/services/name/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libname-server-2.a: $(libname_server_2_a_OBJECTS) $(libname_server_2_a_DEPENDENCIES) 
	-rm -f libname-server-2.a
	$(libname_server_2_a_AR) libname-server-2.a $(libname_server_2_a_OBJECTS) $(libname_server_2_a_LIBADD)
	$(RANLIB) libname-server-2.a
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(libLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libORBitCosNaming-2.la: $(libORBitCosNaming_2_la_OBJECTS) $(libORBitCosNaming_2_la_DEPENDENCIES) 
	$(LINK) -rpath $(libdir) $(libORBitCosNaming_2_la_LDFLAGS) $(libORBitCosNaming_2_la_OBJECTS) $(libORBitCosNaming_2_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
name-client-2$(EXEEXT): $(name_client_2_OBJECTS) $(name_client_2_DEPENDENCIES) 
	@rm -f name-client-2$(EXEEXT)
	$(LINK) $(name_client_2_LDFLAGS) $(name_client_2_OBJECTS) $(name_client_2_LDADD) $(LIBS)
orbit-name-server-2$(EXEEXT): $(orbit_name_server_2_OBJECTS) $(orbit_name_server_2_DEPENDENCIES) 
	@rm -f orbit-name-server-2$(EXEEXT)
	$(LINK) $(orbit_name_server_2_LDFLAGS) $(orbit_name_server_2_OBJECTS) $(orbit_name_server_2_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/CosNaming-common.Plo
include ./$(DEPDIR)/CosNaming-skels.Po
include ./$(DEPDIR)/CosNaming-stubs.Plo
include ./$(DEPDIR)/boot.Po
include ./$(DEPDIR)/name-client.Po
include ./$(DEPDIR)/name-support.Po
include ./$(DEPDIR)/orbit-name-server.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
install-idlDATA: $(idl_DATA)
	@$(NORMAL_INSTALL)
	test -z "$(idldir)" || $(mkdir_p) "$(DESTDIR)$(idldir)"
	@list='$(idl_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(idlDATA_INSTALL) '$$d$$p' '$(DESTDIR)$(idldir)/$$f'"; \
	  $(idlDATA_INSTALL) "$$d$$p" "$(DESTDIR)$(idldir)/$$f"; \
	done

uninstall-idlDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(idl_DATA)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(idldir)/$$f'"; \
	  rm -f "$(DESTDIR)$(idldir)/$$f"; \
	done
install-libORBitservicesincludeHEADERS: $(libORBitservicesinclude_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libORBitservicesincludedir)" || $(mkdir_p) "$(DESTDIR)$(libORBitservicesincludedir)"
	@list='$(libORBitservicesinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(libORBitservicesincludeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(libORBitservicesincludedir)/$$f'"; \
	  $(libORBitservicesincludeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(libORBitservicesincludedir)/$$f"; \
	done

uninstall-libORBitservicesincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libORBitservicesinclude_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libORBitservicesincludedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(libORBitservicesincludedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../../..
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) $(PROGRAMS) $(DATA) \
		$(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libdir)" "$(DESTDIR)$(idldir)" "$(DESTDIR)$(libORBitservicesincludedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES clean-libLTLIBRARIES \
	clean-libtool clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-local distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-idlDATA \
	install-libORBitservicesincludeHEADERS

install-exec-am: install-libLIBRARIES install-libLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-idlDATA uninstall-info-am \
	uninstall-libLIBRARIES uninstall-libLTLIBRARIES \
	uninstall-libORBitservicesincludeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES clean-libLTLIBRARIES clean-libtool \
	clean-noinstPROGRAMS ctags dist-hook distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-local distclean-tags distdir dvi dvi-am html html-am \
	info info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-idlDATA install-info \
	install-info-am install-libLIBRARIES install-libLTLIBRARIES \
	install-libORBitservicesincludeHEADERS install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-idlDATA uninstall-info-am uninstall-libLIBRARIES \
	uninstall-libLTLIBRARIES \
	uninstall-libORBitservicesincludeHEADERS


%-stubs.c %-skels.c %-common.c %-imodule.c %-skelimpl.c: %.h
	true

%.h: $(IDL_DIR)%.idl $(IDL_COMPILER)
	-(rm -f $(*).h $(*)-stubs.c $(*)-skels.c $(*)-common.c $(*)-imodule.c $(*)-skelimpl.c || true) > /dev/null
	$(IDL_COMPILER) $(IDL_FLAGS) --deps $(*D)/.deps/$(*F).idl.P $<
	for I in $(*).h $(*)-stubs.c $(*)-skels.c $(*)-common.c $(*)-imodule.c $(*)-skelimpl.c; do \
		if test -f $$I; then \
			sed -e 's,OObject,Object,g' -e 's,TTypeCode,TypeCode,g' $$I > $$I.out; \
			mv $$I.out $$I ; \
		fi; \
	done
#-include $(IDL_DEP_FILES)

distclean-local:
	-rm -rf .deps

$(libname_server_2_a_OBJECTS) $(name_client_2_OBJECTS) $(orbit_name_server_2_OBJECTS) : CosNaming.h

dist-hook:
	cd $(distdir); rm -f $(BUILT_SOURCES)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
